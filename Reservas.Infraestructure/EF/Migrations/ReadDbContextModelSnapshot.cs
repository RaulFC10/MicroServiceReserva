// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservas.Infraestructure.EF.Contexts;

namespace Reservas.Infraestructure.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.FacturaReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Importe")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("importe");

                    b.Property<string>("NroFactura")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("nroFactura");

                    b.Property<Guid?>("PagoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PagoId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.PagoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("Importe")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("importe");

                    b.Property<decimal>("ImportePagado")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("importePagado");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.ReciboReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<decimal>("ImportePagado")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("importePagado");

                    b.Property<decimal>("ImporteTotal")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("importeTotal");

                    b.Property<string>("NroRecibo")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("nroRecibo");

                    b.Property<Guid?>("PagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("saldo");

                    b.HasKey("Id");

                    b.HasIndex("PagoId");

                    b.ToTable("Recibo");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.ReservaAnuladoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaAnulado");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.ReservaReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<decimal>("Costo")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("costo");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<DateTime>("FechaVuelo")
                        .HasColumnType("date")
                        .HasColumnName("fechaVuelo");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("hora");

                    b.Property<TimeSpan>("HoraLimite")
                        .HasColumnType("time")
                        .HasColumnName("horaLimite");

                    b.Property<Guid>("IdVuelo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NroReserva")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("nroReserva");

                    b.HasKey("Id");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.VueloReservaReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit")
                        .HasColumnName("activo");

                    b.Property<decimal>("Costo")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("costo");

                    b.Property<Guid>("IdPasajero")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idPasajero");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.ToTable("VueloReserva");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.FacturaReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructure.EF.ReadModel.PagoReadModel", "Pago")
                        .WithMany("Factura")
                        .HasForeignKey("PagoId");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.PagoReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructure.EF.ReadModel.ReservaReadModel", "Reserva")
                        .WithMany("Pago")
                        .HasForeignKey("ReservaId");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.ReciboReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructure.EF.ReadModel.PagoReadModel", "Pago")
                        .WithMany()
                        .HasForeignKey("PagoId");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.ReservaAnuladoReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructure.EF.ReadModel.ReservaReadModel", "Reserva")
                        .WithMany("Anulacion")
                        .HasForeignKey("ReservaId");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.VueloReservaReadModel", b =>
                {
                    b.HasOne("Reservas.Infraestructure.EF.ReadModel.ReservaReadModel", "Reserva")
                        .WithMany("VueloReserva")
                        .HasForeignKey("ReservaId");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.PagoReadModel", b =>
                {
                    b.Navigation("Factura");
                });

            modelBuilder.Entity("Reservas.Infraestructure.EF.ReadModel.ReservaReadModel", b =>
                {
                    b.Navigation("Anulacion");

                    b.Navigation("Pago");

                    b.Navigation("VueloReserva");
                });
#pragma warning restore 612, 618
        }
    }
}
